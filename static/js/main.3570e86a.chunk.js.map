{"version":3,"sources":["images/logo.svg","components/Main/Logo/LogoInput.jsx","components/Main/Logo/Logo.jsx","components/Main/Main.jsx","App.js","reportWebVitals.js","index.js"],"names":["LogoInput","url","onChange","type","className","id","onDrop","onDragOver","e","preventDefault","htmlFor","src","logo","alt","Logo","setDragOver","useState","loading","setLoading","imageURL","setImageURL","canNotBeLoaded","setCanNotBeLoaded","file","target","files","dataTransfer","test","fileReader","FileReader","onload","result","readAsDataURL","getUrl","setTimeout","Main","dragOver","console","log","onDragEnter","onDragLeave","style","backgroundColor","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAAe,MAA0B,iCCQ5BA,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,IAAKC,EAAR,EAAQA,SAAR,OACvB,qCACE,uBACEC,KAAK,OACLD,SAAUA,EACVE,UAAU,yBACVC,GAAG,oBAEL,uBACEC,OAAQJ,EACRK,WAAY,SAACC,GAAD,OAAOA,EAAEC,kBACrBC,QAAQ,kBAHV,SAKE,qBACEC,IAAKV,GAAOW,EACZC,IAAI,GACJT,UAAU,iCCjBLU,EAAO,SAAC,GAAuC,IAArCC,EAAoC,EAApCA,YAAoC,EAC3BC,oBAAS,GADkB,mBAClDC,EADkD,KACzCC,EADyC,OAEzBF,mBAAS,IAFgB,mBAElDG,EAFkD,KAExCC,EAFwC,OAGbJ,oBAAS,GAHI,mBAGlDK,EAHkD,KAGlCC,EAHkC,KA8BzD,OACE,mCACE,sBAAKlB,UAAU,YAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,cAAC,EAAD,CACEH,IAAKkB,EACLjB,SAdU,SAACM,GACnBO,GAAY,GACZG,GAAW,GACXV,EAAEC,iBACF,IAAMc,EAAkB,WAAXf,EAAEL,KAAoBK,EAAEgB,OAAOC,MAAM,GAAKjB,EAAEkB,aAAaD,MAAM,GAC5E,OAAQF,IAAU,UAAUI,KAAKJ,EAAKpB,OAAS,SAASwB,KAAKJ,EAAKpB,OAtBrD,SAACoB,GACd,IAAMK,EAAa,IAAIC,WAKvB,OAJAD,EAAWE,OAAS,WAClBZ,GAAW,GACXE,EAAYQ,EAAWG,SAElBH,EAAWI,cAAcT,GAgB2DU,CAAOV,IAZlGD,GAAkB,GAClBY,YAAW,WACTZ,GAAkB,KACjB,KACIJ,GAAW,OAmBXD,GACC,qBAAKb,UAAU,+BAGlBiB,GACC,sBAAMjB,UAAU,0BAAhB,8CAEAa,EAqBE,qCACE,wCACA,sBAAMb,UAAU,uBAAhB,oBACA,4BACE,+CAvBJ,qCACE,mBAAGA,UAAU,kBAAb,SACGe,EACG,8BACA,qBAEN,sBAAMf,UAAU,uBAAhB,oBACA,4BACE,uBACEM,QAAQ,kBACRN,UAAU,oBAFZ,SAIGe,EACG,yBACA,qCCjETgB,EAAO,WAAc,IAAD,EACCnB,oBAAS,GADV,mBACxBoB,EADwB,KACdrB,EADc,KAG/B,OACE,sBACEX,UAAU,YACVC,GAAG,YAFL,UAIE,sBAAKD,UAAU,oBAAf,UACE,oBAAIA,UAAU,2BAAd,0BACA,mBAAGA,UAAU,0BAAb,gFAIF,qBACEA,UAAU,kBACVG,WAAY,SAACC,GAAiB6B,QAAQC,IAAI9B,GAAIO,GAAY,IAC1DwB,YAAa,SAAC/B,GAAiB6B,QAAQC,IAAI9B,GAAIO,GAAY,IAC3DyB,YAAa,kBAAMzB,GAAY,IAC/BT,OAAQ,kBAAMS,GAAY,IAC1B0B,MAAO,CAAEC,gBAAiBN,EAAW,UAAY,QANnD,SAQE,cAAC,EAAD,CACErB,YAAaA,UCfR4B,MARf,WACE,OACE,qBAAKvC,UAAU,MAAf,SACE,cAAC,EAAD,OCYSwC,EAlBS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAMnB,IALLC,EAKI,EALJA,OACAC,EAII,EAJJA,OACAC,EAGI,EAHJA,OACAC,EAEI,EAFJA,OACAC,EACI,EADJA,QAEAJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCPdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.3570e86a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.98c57cbe.svg\";","import React from 'react';\nimport logo from '../../../images/logo.svg';\n\ntype LogoInputProps = {\n  url: string | ArrayBuffer | null,\n  onChange: func\n};\n\nexport const LogoInput = ({ url, onChange }:LogoInputProps):Object => (\n  <>\n    <input\n      type=\"file\"\n      onChange={onChange}\n      className=\"container__logo--input\"\n      id=\"container-input\"\n    />\n    <label\n      onDrop={onChange}\n      onDragOver={(e) => e.preventDefault()}\n      htmlFor=\"container-input\"\n    >\n      <img\n        src={url || logo}\n        alt=\"\"\n        className=\"container__logo--image\"\n      />\n    </label>\n  </>\n);\n","import React, { useState } from 'react';\nimport { LogoInput } from './LogoInput';\n\ntype LogoProps = {\n  setDragOver: (loading: boolean) => any\n};\n\nexport const Logo = ({ setDragOver } :LogoProps):Object => {\n  const [loading, setLoading] = useState(false);\n  const [imageURL, setImageURL] = useState('');\n  const [canNotBeLoaded, setCanNotBeLoaded] = useState(false);\n\n  const getUrl = (file) => {\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setLoading(false);\n      setImageURL(fileReader.result);\n    };\n    return fileReader.readAsDataURL(file);\n  };\n\n  const stopLoading = () => {\n    setCanNotBeLoaded(true);\n    setTimeout(() => {\n      setCanNotBeLoaded(false);\n    }, 3000);\n    return setLoading(false);\n  };\n\n  const dropElement = (e) => {\n    setDragOver(false);\n    setLoading(true);\n    e.preventDefault();\n    const file = e.type === 'change' ? e.target.files[0] : e.dataTransfer.files[0];\n    return !file || !(/(jpeg)/g.test(file.type) || /(png)/g.test(file.type)) ? stopLoading() : getUrl(file);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"container__logo\">\n          <LogoInput\n            url={imageURL}\n            onChange={dropElement}\n          />\n          {loading && (\n            <div className=\"container__logo--loader\" />\n          )}\n        </div>\n        {canNotBeLoaded && (\n          <span className=\"container--notification\">Only for png or jpeg file format</span>\n        )}\n        {!loading\n          ? (\n            <>\n              <p className=\"container--drop\">\n                {imageURL\n                  ? 'Drag & drop here to replace'\n                  : 'Drag & drop here'}\n              </p>\n              <span className=\"container--separator\">- or -</span>\n              <p>\n                <label\n                  htmlFor=\"container-input\"\n                  className=\"container--upload\"\n                >\n                  {imageURL\n                    ? 'Select file to replace'\n                    : 'Select file to upload'}\n                </label>\n              </p>\n            </>\n          ) : (\n            <>\n              <p>Loading</p>\n              <span className=\"container--separator\">- or -</span>\n              <p>\n                <span>Cancel</span>\n              </p>\n            </>\n          )}\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport { Logo } from './Logo';\n\nexport const Main = ():Object => {\n  const [dragOver, setDragOver] = useState(false);\n\n  return (\n    <div\n      className=\"component\"\n      id=\"component\"\n    >\n      <div className=\"component__header\">\n        <h2 className=\"component__header--title\">Company Logo</h2>\n        <p className=\"component__header--text\">\n          Logo should be square, 100px size and in png, jpeg file format.\n        </p>\n      </div>\n      <div\n        className=\"component__body\"\n        onDragOver={(e) => {debugger; console.log(e); setDragOver(true)}} //eslint-disable-line\n        onDragEnter={(e) => {debugger; console.log(e); setDragOver(true)}} //eslint-disable-line\n        onDragLeave={() => setDragOver(false)}\n        onDrop={() => setDragOver(false)}\n        style={{ backgroundColor: dragOver ? '#F5F9FF' : '#fff' }}\n      >\n        <Logo\n          setDragOver={setDragOver}\n        />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { Main } from './components/Main';\n\nfunction App():Object {\n  return (\n    <div className=\"App\">\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS,\n      getFID,\n      getFCP,\n      getLCP,\n      getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}